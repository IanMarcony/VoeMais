/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.uea.voemais.client.view;

import com.uea.voemais.client.controller.ClientController;
import com.uea.voemais.client.model.Client;
import com.uea.voemais.database.controller.SerializableManager;
import com.uea.voemais.shared.airplane.controller.AirplaneController;
import com.uea.voemais.shared.airplane.model.Airplane;
import com.uea.voemais.shared.flight.model.Flight;
import com.uea.voemais.shared.passenger.model.Passenger;
import com.uea.voemais.shared.seat.model.Seat;
import com.uea.voemais.shared.ticketflight.model.TicketFlight;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class SelectSeatAriplaneJFrame extends javax.swing.JFrame {
    private Flight departureFlight;
    private Flight arrivalFlight;
    private List<Passenger> passengerList;
    /**
     * Creates new form SelectSeatAriplaneJFrame
     */
    public SelectSeatAriplaneJFrame() {
        initComponents();
    }
    
     public SelectSeatAriplaneJFrame(Flight departureFlight, Flight arrivalFlight, List<Passenger> passengerList) {
        initComponents();
        this.departureFlight = departureFlight;
        this.arrivalFlight = arrivalFlight;
        this.passengerList = passengerList;
        
        if(this.arrivalFlight==null){
            this.seatsSelectedDepartureAndArrivalLabel.setVisible(false);
            this.seatsSelectedArrivalList.setVisible(false);
            this.seastArrivalScrollPane.setVisible(false);
        }
        
        DefaultListModel listDepartureModel = new DefaultListModel();
        DefaultListModel listArrivalModel = new DefaultListModel();

         for (Seat seat :departureFlight.getAirplane().getSeats()) {
             if(seat.isAvailable()){
                 listDepartureModel.addElement("Assento: "+seat.getNumber());
             }
         }
         
         
         this.seatsSelectedDepartureList.setModel(listDepartureModel);
         
        if(this.arrivalFlight!=null){
         for (Seat seat :arrivalFlight.getAirplane().getSeats()) {
             if(seat.isAvailable()){
                 listArrivalModel.addElement("Assento: "+seat.getNumber());
             }
         }
         
            this.seatsSelectedArrivalList.setModel(listArrivalModel);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        seatsSelectedDepartureList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        seatsSelectedDepartureAndArrivalLabel = new javax.swing.JLabel();
        seastArrivalScrollPane = new javax.swing.JScrollPane();
        seatsSelectedArrivalList = new javax.swing.JList<>();
        finishSaleButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 153, 255));

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Comprar Passagem: Selecionar assentos");

        jScrollPane1.setViewportView(seatsSelectedDepartureList);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Avião de ida");

        seatsSelectedDepartureAndArrivalLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        seatsSelectedDepartureAndArrivalLabel.setForeground(new java.awt.Color(255, 255, 255));
        seatsSelectedDepartureAndArrivalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        seatsSelectedDepartureAndArrivalLabel.setText("Avião de volta");

        seastArrivalScrollPane.setViewportView(seatsSelectedArrivalList);

        finishSaleButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        finishSaleButton.setText("FECHAR COMPRA");
        finishSaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishSaleButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backButton.setText("CANCELAR");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(seatsSelectedDepartureAndArrivalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(seastArrivalScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(finishSaleButton)
                .addGap(89, 89, 89))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(seatsSelectedDepartureAndArrivalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seastArrivalScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finishSaleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void finishSaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishSaleButtonActionPerformed
        
        int[] selectedSeatsDepartureIndices = this.seatsSelectedDepartureList.getSelectedIndices();
        int totalSelectedDeparture = selectedSeatsDepartureIndices.length;
        int totalSelectedArrival = 0;
        List<Flight> flights = new ArrayList<>();      
        
        if(totalSelectedDeparture!=this.passengerList.size()){
           JOptionPane.showMessageDialog(rootPane, "Selecione os assentos na mesma quantidade de passageiros: "+this.passengerList.size()+" passageiros");
           return;
        }
        
        for (int i = 0; i < selectedSeatsDepartureIndices.length; i++) {
            this.departureFlight.getAirplane().getSeats().get(i).setAvailable(false);
        }
        
        Airplane airplaneDeparture = this.departureFlight.getAirplane();
       
       List<Airplane> airplaneList = AirplaneController.getFromDB();
       
        for (Airplane airplane: airplaneList) {
            if(airplane.getName().equals(airplaneDeparture.getName())){
                airplane =  airplaneDeparture;
                break;
            }
            
        }
       
       SerializableManager.saveObject(Airplane.class.getName(), airplaneList);
        
        flights.add(this.departureFlight);
        
        if(this.arrivalFlight!=null){
           int[] selectedSeatsArrivalIndices = this.seatsSelectedArrivalList.getSelectedIndices();
           totalSelectedArrival =  selectedSeatsArrivalIndices.length;

           if(totalSelectedArrival!=this.passengerList.size()){
               JOptionPane.showMessageDialog(rootPane, "Selecione os assentos na mesma quantidade de passageiros: "+this.passengerList.size()+" passageiros");
               return;
           }
           Airplane airplaneArrival = this.arrivalFlight.getAirplane();
           List<Airplane> airplaneListArrival = AirplaneController.getFromDB();
       
            for (Airplane airplane: airplaneListArrival) {
                if(airplane.getName().equals(airplaneArrival.getName())){
                    airplane =  airplaneArrival;
                    break;
                }

            }
       
            SerializableManager.saveObject(Airplane.class.getName(), airplaneList);
             flights.add(this.arrivalFlight);
        }
        
        
        TicketFlight ticketFlight = ClientController.buyTicketFlight(flights, passengerList, Client.getInstance());   
       
        JOptionPane.showMessageDialog(rootPane, "Compra efetuada com sucesso no valor de R$"+ticketFlight.getPrice());
          ClientMenuJFrame dados = new ClientMenuJFrame();

        dados.pack();
        dados.show();
        this.dispose();
    }//GEN-LAST:event_finishSaleButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
         ClientMenuJFrame dados = new ClientMenuJFrame();

        dados.pack();
        dados.show();
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectSeatAriplaneJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectSeatAriplaneJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectSeatAriplaneJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectSeatAriplaneJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectSeatAriplaneJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton finishSaleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane seastArrivalScrollPane;
    private javax.swing.JList<String> seatsSelectedArrivalList;
    private javax.swing.JLabel seatsSelectedDepartureAndArrivalLabel;
    private javax.swing.JList<String> seatsSelectedDepartureList;
    // End of variables declaration//GEN-END:variables
}
